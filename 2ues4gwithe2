Setup 
=====

First we have to turn on some extra functionality in srsRan and recompile. To do this, follow the steps below:

.. code-block:: bash

    cd srsRAN-e2
    vim CMakeLists.txt

Make sure the following is set to on:

.. code-block:: bash

    option(ENABLE_RIC_AGENT_KPM    "Enable RIC E2 Agent KPM metrics"  ON)
    option(ENABLE_RIC_AGENT_NEXRAN "Enable RIC E2 Agent NexRAN model" ON)
    option(ENABLE_SLICER           "Enable NexRAN Slicer"             ON)

Save and close the txt file then follow the steps below:

.. code-block:: bash
    
    rm -rf build
    mkdir build
    export SRS=`realpath .`
    cd build
    cmake ../ -DCMAKE_BUILD_TYPE=RelWithDebInfo \
        -DRIC_GENERATED_E2AP_BINDING_DIR=${SRS}/e2_bindings/E2AP-v01.01 \
        -DRIC_GENERATED_E2SM_KPM_BINDING_DIR=${SRS}/e2_bindings/E2SM-KPM \
        -DRIC_GENERATED_E2SM_GNB_NRT_BINDING_DIR=${SRS}/e2_bindings/E2SM-GNB-NRT
    make -j`nproc`
    make test
    sudo make install
    sudo ldconfig
    sudo srsran_install_configs.sh user --force
    cd ../../

Editing Configurations
----------------------

We need to change some settings in the srsRan config files 

Access the command line as superuser:

.. code-block:: bash

    sudo -i
    
Open rr.conf configuration file with the following command:

.. code-block:: bash
    
    vim .config/srsran/rr.conf

Make sure the following lines of text is commented with “// ”

.. code-block:: bash

      nr_cell_list =
    (
    //   {
    //    rf_port = 1;
    //    cell_id = 0x02;
    //    tac = 0x0007;
    //    pci = 500;
    //    root_seq_idx = 204;

        // TDD:
        //dl_arfcn = 634240;
        //band = 78;

        // FDD:
    //    dl_arfcn = 368500;
    //    band = 3;
    //  }
    );

Save and close the file. Then open ue.conf configuration file with the following command:

.. code-block:: bash

    vim .config/srsran/ue.conf
    


Comment out Lte release under the [rrc] section:

.. code-block:: bash

    #release           = 15

Make sure [rat.nr] section is commented out as well:

.. code-block:: bash

    #[rat.nr]
    #bands = 3,78
    #nof_carriers = 1

Save and close the file. Then open enb.conf configuration file with the following command:

.. code-block:: bash

    vim .config/srsran/enb.conf
    
Make sure device_name and device_args is commented out:

.. code-block:: bash

    #device_name = zmq
    #device_args = fail_on_disconnect=true,tx_port0=tcp://*:2000,rx_port0=tcp://localhost:2001,tx_port1=tcp://*:2100,rx_port1=tcp://localhost:2101,id=enb,base_srate=23.04e6
    
    
In Userdb.csv on the Enb side make sure it has:

.. code-block:: bash

   ue2,xor,001010123456780,00112233445566778899aabbccddeeff,opc,63bfa50ee6523365ff14c1f45f88737d,9001,0000000013a1,7,dynamic
   ue1,xor,001010123456789,00112233445566778899aabbccddeeff,opc,63bfa50ee6523365ff14c1f45f88737d,9001,000000001467,7,dynamic


Now you are ready to run 2 Ues in 4g configuration


Running the xApp
================

Terminal 1: Start the Core Network/Ues

.. code-block:: bash

    sudo srsepc
    
Terminal 2: Set up Environment Variables and Base Station

.. code-block:: bash

    export E2NODE_IP=`hostname  -I | cut -f1 -d' '`
    export E2NODE_PORT=5006
    export E2TERM_IP=`sudo kubectl get svc -n ricplt --field-selector metadata.name=service-ricplt-e2term-sctp-alpha -o jsonpath='{.items[0].spec.clusterIP}'`

.. code-block:: bash

    sudo srsenb --enb.n_prb=25 --enb.name=enb1 --enb.enb_id=0x19B --rf.device_name=uhd --ric.agent.remote_ipv4_addr=${E2TERM_IP} --log.all_level=warn --ric.agent.log_level=debug --log.filename=stdout --ric.agent.local_ipv4_addr=${E2NODE_IP} --ric.agent.local_port=${E2NODE_PORT}

Terminal 3: Set up the first UE

.. code-block:: bash

   srsue


Terminal 4: Now the second

.. code-block:: bash

   srsue

Terminal 5: on the base station side

iperf3 -s -p 5002


Terminal 6: on the base station side

iperf3 -s -i 1


Terminal 7: on UE1 side

 iperf3 -c 172.16.0.1 -b 10M -i 1 -t 3000000
 
 
Terminal 8: on UE2 side

 iperf3 -c 172.16.0.1 -b 10M -i 1 -t 3000000
 
 
 
 
 
 
 
 
 
 
 







	
  
  
    
    
